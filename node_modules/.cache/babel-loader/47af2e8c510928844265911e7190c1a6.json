{"ast":null,"code":"var _jsxFileName = \"/Users/Ry/Documents/Developer/chart3r/src/pages/EmailPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"../components/css/EmailPage.module.css\";\nimport { UserAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailPage() {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const navigate = useNavigate();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const confirmPasswordInputRef = useRef();\n  // const lastnameInputRef = useRef();\n  // const firstnameInputRef = useRef();\n  const {\n    emailSignIn,\n    emailCreateUser\n  } = UserAuth();\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandlerSignIn = async event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setError(\"\");\n    try {\n      await emailSignIn(enteredEmail, enteredPassword);\n      navigate(\"/account\");\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n  };\n  const submitHandlerSignUp = async event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredConfirmPassword = confirmPasswordInputRef.current.value;\n    setError(\"\");\n    try {\n      await emailCreateUser(enteredEmail, enteredPassword);\n      navigate(\"/account\");\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container centre\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Sign in to your account\" : \"Sign up for a free account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: isLogin ? submitHandlerSignIn : submitHandlerSignUp,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            ref: emailInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            required: true,\n            ref: confirmPasswordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.primaryButton,\n            children: isLogin ? \"Login\" : \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: (classes.secondaryButton, classes.toggle),\n            onClick: switchAuthModeHandler,\n            children: isLogin ? \"Don't have an account yet? Sign up\" : \"Already have an account? Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailPage, \"RASKCiZzHyUr7ycSkz4wBbEc3Dc=\", false, function () {\n  return [useNavigate];\n});\n_c = EmailPage;\nexport default EmailPage;\nvar _c;\n$RefreshReg$(_c, \"EmailPage\");","map":{"version":3,"names":["useState","useRef","useNavigate","classes","UserAuth","EmailPage","error","setError","isLogin","setIsLogin","navigate","emailInputRef","passwordInputRef","confirmPasswordInputRef","emailSignIn","emailCreateUser","switchAuthModeHandler","prevState","submitHandlerSignIn","event","preventDefault","enteredEmail","current","value","enteredPassword","message","console","log","submitHandlerSignUp","enteredConfirmPassword","auth","control","actions","primaryButton","secondaryButton","toggle"],"sources":["/Users/Ry/Documents/Developer/chart3r/src/pages/EmailPage.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"../components/css/EmailPage.module.css\";\nimport { UserAuth } from \"../context/AuthContext\";\n\nfunction EmailPage() {\n  const [error, setError] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n\n  const navigate = useNavigate();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const confirmPasswordInputRef = useRef();\n  // const lastnameInputRef = useRef();\n  // const firstnameInputRef = useRef();\n  const { emailSignIn, emailCreateUser } = UserAuth();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandlerSignIn = async (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setError(\"\");\n    try {\n      await emailSignIn(enteredEmail, enteredPassword);\n      navigate(\"/account\");\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const submitHandlerSignUp = async (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredConfirmPassword = confirmPasswordInputRef.current.value;\n\n    setError(\"\");\n\n    try {\n      await emailCreateUser(enteredEmail, enteredPassword);\n      navigate(\"/account\");\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className=\"container centre\">\n      <h1>\n        {isLogin ? \"Sign in to your account\" : \"Sign up for a free account\"}\n      </h1>\n      <section className={classes.auth}>\n        <form onSubmit={isLogin ? submitHandlerSignIn : submitHandlerSignUp}>\n          {/* {!isLogin && (\n            <div>\n              <div className={classes.control}>\n                <label htmlFor=\"firstname\">First Name</label>\n                <input\n                  type=\"text\"\n                  id=\"firstname\"\n                  required\n                  // ref={firstnameInputRef}\n                ></input>\n              </div>\n              <div className={classes.control}>\n                <label htmlFor=\"lastname\">Last Name</label>\n                <input\n                  type=\"text\"\n                  id=\"surname\"\n                  required\n                  // ref={lastnameInputRef}\n                ></input>\n              </div>\n            </div>\n          )} */}\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              required\n              ref={passwordInputRef}\n            />\n          </div>\n          {!isLogin && (\n            <div className={classes.control}>\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                required\n                ref={confirmPasswordInputRef}\n              />\n            </div>\n          )}\n          <div className={classes.actions}>\n            {\n              <button className={classes.primaryButton}>\n                {isLogin ? \"Login\" : \"Create Account\"}\n              </button>\n            }\n            <button\n              type=\"button\"\n              className={(classes.secondaryButton, classes.toggle)}\n              onClick={switchAuthModeHandler}\n            >\n              {isLogin\n                ? \"Don't have an account yet? Sign up\"\n                : \"Already have an account? Sign in\"}\n            </button>\n          </div>\n        </form>\n      </section>\n    </div>\n  );\n}\n\nexport default EmailPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}