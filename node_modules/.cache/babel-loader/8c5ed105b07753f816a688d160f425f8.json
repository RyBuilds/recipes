{"ast":null,"code":"var _jsxFileName = \"/Users/Ry/Documents/Developer/chart3r/src/pages/SignUpPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"../components/css/EmailPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUpPage() {\n  _s();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const firstnameInputRef = useRef();\n  const lastnameInputRef = useRef();\n  const [error, setError] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = async event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setError(\"\");\n    try {} catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // function submitHandler(event) {\n  //   event.preventDefault();\n\n  //   const enteredEmail = emailInputRef.current.value;\n  //   const enteredPassword = passwordInputRef.current.value;\n  //   // const enteredFirstname = firstnameInputRef.current.value;\n  //   // const enteredSurname = surnameInputRef.current.value;\n\n  //   // ADD VALIDATION\n\n  //   setIsLoading(true);\n  //   let url;\n  //   if (isLogin) {\n  //     url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_API_KEY}`;\n  //   } else {\n  //     url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_API_KEY}`;\n  //   }\n  //   fetch(url, {\n  //     method: \"POST\",\n  //     body: JSON.stringify({\n  //       email: enteredEmail,\n  //       password: enteredPassword,\n  //       returnSecureToken: true,\n  //     }),\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   })\n  //     .then((res) => {\n  //       setIsLoading(false);\n  //       if (res.ok) {\n  //         return res.json();\n  //       } else {\n  //         return res.json().then((data) => {\n  //           console.log(data);\n  //           // WEAK PASSWORD\n  //           let errorMessage = \"Authentication failed\";\n  //           if (data && data.error && data.error.message) {\n  //             errorMessage = data.error.message;\n  //           }\n  //           // DISPLAY ERROR MODAL\n  //           throw new Error(errorMessage);\n  //         });\n  //       }\n  //     })\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err.message);\n  //     });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container centre\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Sign in to your account\" : \"Sign up for a free account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [!isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstname\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"firstname\",\n              required: true,\n              ref: firstnameInputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lastname\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"surname\",\n              required: true,\n              ref: lastnameInputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            ref: emailInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [\n          /*#__PURE__*/\n          // !isLoading &&\n          _jsxDEV(\"button\", {\n            className: classes.primaryButton,\n            children: isLogin ? \"Login\" : \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: (classes.secondaryButton, classes.toggle),\n            onClick: switchAuthModeHandler,\n            children: isLogin ? \"Create new account\" : \"Login with existing account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUpPage, \"sDfb8cyMpWUf1ETqbeAiD4srjg8=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["useState","useRef","useNavigate","classes","SignUpPage","emailInputRef","passwordInputRef","firstnameInputRef","lastnameInputRef","error","setError","isLogin","setIsLogin","isLoading","setIsLoading","navigate","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","message","auth","control","actions","primaryButton","secondaryButton","toggle"],"sources":["/Users/Ry/Documents/Developer/chart3r/src/pages/SignUpPage.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"../components/css/EmailPage.module.css\";\n\nfunction SignUpPage() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const firstnameInputRef = useRef();\n  const lastnameInputRef = useRef();\n\n  const [error, setError] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setError(\"\");\n    try {\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // function submitHandler(event) {\n  //   event.preventDefault();\n\n  //   const enteredEmail = emailInputRef.current.value;\n  //   const enteredPassword = passwordInputRef.current.value;\n  //   // const enteredFirstname = firstnameInputRef.current.value;\n  //   // const enteredSurname = surnameInputRef.current.value;\n\n  //   // ADD VALIDATION\n\n  //   setIsLoading(true);\n  //   let url;\n  //   if (isLogin) {\n  //     url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_API_KEY}`;\n  //   } else {\n  //     url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_API_KEY}`;\n  //   }\n  //   fetch(url, {\n  //     method: \"POST\",\n  //     body: JSON.stringify({\n  //       email: enteredEmail,\n  //       password: enteredPassword,\n  //       returnSecureToken: true,\n  //     }),\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   })\n  //     .then((res) => {\n  //       setIsLoading(false);\n  //       if (res.ok) {\n  //         return res.json();\n  //       } else {\n  //         return res.json().then((data) => {\n  //           console.log(data);\n  //           // WEAK PASSWORD\n  //           let errorMessage = \"Authentication failed\";\n  //           if (data && data.error && data.error.message) {\n  //             errorMessage = data.error.message;\n  //           }\n  //           // DISPLAY ERROR MODAL\n  //           throw new Error(errorMessage);\n  //         });\n  //       }\n  //     })\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err.message);\n  //     });\n  // }\n\n  return (\n    <div className=\"container centre\">\n      <h1>\n        {isLogin ? \"Sign in to your account\" : \"Sign up for a free account\"}\n      </h1>\n      <section className={classes.auth}>\n        <form onSubmit={submitHandler}>\n          {!isLogin && (\n            <div>\n              <div className={classes.control}>\n                <label htmlFor=\"firstname\">First Name</label>\n                <input\n                  type=\"text\"\n                  id=\"firstname\"\n                  required\n                  ref={firstnameInputRef}\n                ></input>\n              </div>\n              <div className={classes.control}>\n                <label htmlFor=\"lastname\">Last Name</label>\n                <input\n                  type=\"text\"\n                  id=\"surname\"\n                  required\n                  ref={lastnameInputRef}\n                ></input>\n              </div>\n            </div>\n          )}\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              required\n              ref={passwordInputRef}\n            />\n          </div>\n          {!isLogin && (\n            <div className={classes.control}>\n              <label htmlFor=\"password\">Confirm Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                required\n                ref={passwordInputRef}\n              />\n            </div>\n          )}\n          <div className={classes.actions}>\n            {/* USER FEEDBACK */}\n            {\n              // !isLoading &&\n              <button className={classes.primaryButton}>\n                {isLogin ? \"Login\" : \"Create Account\"}\n              </button>\n            }\n            {/* {isLoading && <p>Sending Request...</p>} */}\n            <button\n              type=\"button\"\n              className={(classes.secondaryButton, classes.toggle)}\n              onClick={switchAuthModeHandler}\n            >\n              {isLogin ? \"Create new account\" : \"Login with existing account\"}\n            </button>\n          </div>\n        </form>\n      </section>\n    </div>\n  );\n}\n\nexport default SignUpPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}